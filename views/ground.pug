extends base.pug

block body
  #app.fixed
    .topbar(:class='{disabled:!connected}')
      .previous
        .name {{previous.name}}
        .mask.scale-compact-5(v-for='(value,index) in previous.cards',:key='value')
          card(:value='value', :index='index', class='flipped')

      .right.numbers {{solved}}
        span Solved
      .left.numbers {{deck_amount}}
        span Remains

    .ground(:class='{disabled:!connected}')
      .pure-g
        .pure-u-1-3(v-for='(value,index) in ground', :key='value')
          .mask(@click='select(index, $event)', :class='{selected: inarr(index,selected)}')
            card(:value='value', :index='index', :class='{flipped:flipped[index]}')

    .notify(:class='{hidden:!notify}')
      p {{notify}}


    .corner.left(:class='{disabled:selected.length != 3}', @click='set()')
      .mi check
    .corner.right(:class='{disabled:selected.length == 0}', @click='clear')
      .mi clear

    .toolbar
      .title {{local?'Solo Mode':'Multiplayer Mode'}}
      .mi.tooltip(@click='help', data-tooltip="Help") help
      .mi.tooltip(@click='fullscreen', data-tooltip="Fullscreen") zoom_out_map
      .mi.tooltip(v-if='local', @click='restart', data-tooltip="Restart") change_history
      .mi.tooltip(v-if='!local', @dblclick='restart', data-tooltip="Restart") change_history
      .mi.tooltip(v-if='!local', data-tooltip="Players") person
        label {{players}}
      .mi.tooltip(v-if='local', @click='hint', :class='{disabled:!hints}', data-tooltip="Hint") lightbulb_outline
        label {{hints}}
      .mi.tooltip(v-if='!local && !connected', @click='connect', data-tooltip="Reconnect") refresh

    .modal(v-if='is_gameover')
      .centered
        h1 Gameover
        .pure-g.scoreboard
          template(v-for='(value, key) in scoreboard.scoreboard')
            .pure-u-1-3.name {{key}}
            .pure-u-2-3.desc
              span.score {{value || 0}}
              span.text sets

        .button(@click='gameover()') Close
      .close(@click='gameover()')
        .mi clear

    .modal(v-if='is_menu')
      .centered
        p Hello
      .close(@click='menu(false)')
        .mi clear

    .modal(v-if='helping')
      iframe.filled(src='/help')
      .close(@click='help')
        .mi clear



  script#card-template(type='text/x-template')
    .card(v-if='com')
      .front
        template(v-for='n in com.number')
          .svg(v-svg='{color: com.color, shading: com.shading, shape:com.shape}')
      .back

  script(src='/static/dist/vue.min.js')
  script(src='/static/dist/svg-injector.min.js')
  script(src='/static/scripts/utils.js')
  script(src='/static/scripts/mixins.js')
  script(src='/static/scripts/extend.js')
  script(src='/static/scripts/app.js')
  block mode
